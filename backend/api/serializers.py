from rest_framework import serializers
from .models import Owner, Booking

class OwnerSerializer(serializers.ModelSerializer):
    class Meta:
        model = Owner
        fields = ["first_name", "last_name", "turf_id", "turf_name"]  # Include all necessary fields
        read_only_fields = ["turf_id"]  # turf_id is autogenerated

class BookingSerializer(serializers.ModelSerializer):
    owner_turf_id = serializers.UUIDField()  # Define owner_turf_id as a UUIDField

    class Meta:
        model = Booking
        fields = ["username", "email", "phone", "owner_turf_id", "turf_name", "date", "amount"]

    # Overriding the create method to fetch the Owner instance based on UUID
    def create(self, validated_data):
        owner_turf_id = validated_data.pop("owner_turf_id")
        owner_instance = Owner.objects.get(turf_id=owner_turf_id)  # Fetch the Owner instance by turf_id
        booking = Booking.objects.create(owner_turf_id=owner_instance, **validated_data)
        return booking
